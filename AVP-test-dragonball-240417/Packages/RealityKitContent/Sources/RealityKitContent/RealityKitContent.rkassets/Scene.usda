#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

reorder rootPrims = ["Root", "GridMaterial"]

def Xform "Root"
{
    reorder nameChildren = ["manga3", "manga2", "manga1", "toribot", "Cube", "Cube_1", "Cube_2", "GridMaterial", "Sphere"]
    rel material:binding = None (
        bindMaterialAs = "weakerThanDescendants"
    )

    def Sphere "Sphere" (
        active = false
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["Collider", "InputTarget", "GridMaterial"]
        rel material:binding = </Root/GridMaterial/GridMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.2)
                float radius = 0.1
                token shapeType = "Sphere"
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }
    }

    def "GridMaterial" (
        active = true
        references = @Materials/GridMaterial.usda@
    )
    {
        float3 xformOp:scale = (1, 1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Cube "Cube" (
        active = false
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (0, 0, 0.4363323)
        }
    )
    {
        rel material:binding = </Root/Cube/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (0.976296, 0, 0, 0.2164396)
        float3 xformOp:scale = (1, 1.4, 0.1)
        float3 xformOp:translate = (0.14999996, -0.2216377, -0.095)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            prepend token outputs:surface.connect = </Root/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def Cube "Cube_1" (
        active = false
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (0, 0, -1.0471976)
        }
    )
    {
        rel material:binding = </Root/Cube_1/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (0.8660254, 0, 0, -0.5)
        float3 xformOp:scale = (1, 1.4, 0.1)
        float3 xformOp:translate = (-0.15000005, -0.021637693, -0.085)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:surface.connect = </Root/Cube_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def Cube "Cube_2" (
        active = false
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
    )
    {
        rel material:binding = </Root/Cube_2/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1.4, 0.1)
        float3 xformOp:translate = (0.15, 0, -0.1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:surface.connect = </Root/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def "toribot" (
        active = true
        references = @exercises-240421-toribot.usdz@
    )
    {
        float3 xformOp:scale = (0.13, 0.13, 0.13)
        float3 xformOp:translate = (0, -0.16163835, 0.02)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "manga1" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0.4363323)
        }
        references = @exercises-240421-manga-db1.usdz@
    )
    {
        quatf xformOp:orient = (0.976296, 0, 0, 0.2164396)
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (0.15, -0.23, -0.04)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "manga2" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, -1.0471976)
        }
        references = @exercises-240421-manga-db2.usdz@
    )
    {
        quatf xformOp:orient = (0.8660254, 0, 0, -0.5)
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (-0.15, -0.02, -0.085)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "manga3" (
        active = true
        references = @exercises-240421-manga-db3.usdz@
    )
    {
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (0.15, 0, -0.105)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

